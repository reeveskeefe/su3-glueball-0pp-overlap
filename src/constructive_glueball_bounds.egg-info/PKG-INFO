Metadata-Version: 2.4
Name: constructive-glueball-bounds
Version: 0.2.0
Summary: Deterministic SU(3) 0++ overlap and glueball calibration pipeline.
Author: Keefe Reeves
License: MIT
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: numpy<2.0,>=1.26
Requires-Dist: matplotlib>=3.7.0

# su3-glueball-0pp-overlap
**Goal:** Prove—quantitatively and reproducibly—that an **optimized operator basis** for the scalar glueball \(0^{++}\) attains **≥ 60% ground-state overlap**, and package the full derivation and checks for both a GitHub report and a manuscript appendix.

---

## Why this repository exists (one-paragraph overview)
In constructive/lattice SU(3) Yang–Mills, your analytic pipeline gives a **transfer-matrix gap** \(m_0\ge\tau>0\). The lightest physical excitation is the **\(0^{++}\) glueball**, so the practical cross-check is: “Do our gauge-invariant operators actually **couple dominantly** to that state?” This repo formalizes that question. We build a **variational operator basis** (smeared, blocked Wilson-loop composites projected to the cubic irrep \(A_1^{++}\)), solve a **generalized eigenvalue problem** (GEVP) on the correlator matrix to obtain the optimal linear combination, and then **quantify** the ground-state overlap using mathematically controlled estimators with finite-\(t\) excited-state bounds. Passing the **≥ 60%** criterion in a stable plateau window demonstrates that our constants (tube-cost \(\tau\), locality scale \(\ell_{\text{phys}}\), KP contraction envelope) are not only internally consistent but externally **saturated by a clean scalar**.

---

## Repository layout

su3-glueball-0pp-overlap/
.
├── CLI.py
├── IndependentResearchingTools
├── ReadMe.md
├── TOOLcli.py
├── outputs
├── pyproject.toml
├── src
│   ├── certificate.py
│   ├── constants_phys.py
│   ├── cross_estimator.py
│   ├── excited_state_bound.py
│   ├── gevp_stability.py
│   ├── glueball_calibration.py
│   ├── io_utils.py
│   ├── kp_recursion.py
│   ├── lin_alg.py
│   ├── plateau.py
│   └── report_md.py
└── tests

> You can back this repo with **analytic-only** correlator models (from your constants) or with **measured** correlators on small lattices; either way, the mathematics and acceptance logic are identical.

---

## Operator construction (physics setup)
- **Gauge-invariant basis** \(\{O_i\}\): spatial Wilson loops of multiple shapes and sizes, with **APE/HYP/Wilson-flow smearing** levels \(\kappa\in\mathcal{K}\); momentum-zero projection and cubic-group projection to **\(A_1^{++}\)** to target \(J^{PC}=0^{++}\) in the continuum.
- **Vacuum subtraction** (if needed): \(O_i \mapsto O_i - \langle O_i\rangle\) so the correlator matrix is centered.
- **Correlator matrix** on a time slice \(t\ge 0\):
  \[
  C_{ij}(t)=\big\langle O_i(t)\,O_j(0)\big\rangle
  =\sum_{n\ge0} Z_{i}^{(n)}\,\overline{Z_{j}^{(n)}}\,e^{-E_n t},
  \quad
  Z_i^{(n)}=\langle\Omega|O_i|n\rangle,
  \]
  with \(E_0=m_{0^{++}}\) the ground-state energy in the scalar channel.
- **SPD at small \(t\)**: for \(t_0>0\) small enough, \(C(t_0)\) is **symmetric positive definite** (SPD). Use **Cholesky** factor \(C(t_0)=L\,L^\top\) to define the \(C(t_0)\)-inner product.

---

## Variational method (Lüscher–Wolff GEVP)
Solve for \(t>t_0\):
\[
C(t)\,v_n(t,t_0)=\lambda_n(t,t_0)\,C(t_0)\,v_n(t,t_0),\quad
v_m^\top C(t_0) v_n=\delta_{mn}.
\]
Equivalently, in the **whitened** basis \(K(t,t_0)=L^{-1}C(t)L^{-\top}\) (with \(C(t_0)=L L^\top\)):
\[
K(t,t_0)\,u_n=\lambda_n(t,t_0)\,u_n,\qquad \|u_n\|_2=1,\quad
v_n=L^{-\top}u_n.
\]
**Principal correlators** satisfy
\[
\lambda_n(t,t_0)=e^{-E_n (t-t_0)}\Big(1+\mathcal{O}\big(e^{-\Delta_n (t-t_0)}\big)\Big),
\quad \Delta_n=\min_{m\ne n}|E_m-E_n|,
\]
and the **optimized operator** (ground state) is
\[
O_{\text{opt}}(t,t_0)=\sum_i \big(v_0(t,t_0)\big)_i\,O_i.
\]

---

## What “≥ 60% ground-state overlap” means
Let \(O_w=\sum_i w_i O_i\). Its auto-correlator is
\[
C_w(t)=w^\top C(t)\,w=\sum_{n\ge0}\big|Z_w^{(n)}\big|^2 e^{-E_n t},\quad
Z_w^{(n)}=\sum_i w_i Z_i^{(n)}.
\]
Define the **overlap fraction**
\[
\mathcal{F}_0(w)\;\equiv\;\frac{\big|Z_w^{(0)}\big|^2}{\sum_{n\ge0}\big|Z_w^{(n)}\big|^2}\;\in\;(0,1].
\]
We accept the basis as **validated** if there exists a stable \((t_0,t)\) window with an optimized weight \(w_{\text{opt}}=v_0(t,t_0)\) such that a rigorous/operational estimator \(\widehat{\mathcal{F}}_0\big(w_{\text{opt}}\big)\) satisfies
\[
\boxed{\ \widehat{\mathcal{F}}_0\big(w_{\text{opt}}\big)\ \ge\ 0.60\ }
\]
with statistical and systematic uncertainties under control (plateau stability, \(t_0\)-variation, jackknife/BS resampling if data-driven).

---

## Two complementary, mathematically controlled estimators

### (A) **Variance-share estimator** in the whitened space
In whitened coordinates, \(K(t,t_0)=\sum_{n\ge0} \alpha_n(t,t_0)\,|z_n\rangle\langle z_n|\) with \(\alpha_n=e^{-E_n (t-t_0)}\), and \(\{|z_n\rangle\}\) **orthonormal** if the basis spans the states perfectly at \(t_0\). The **principal eigenpair** \((\lambda_0,u_0)\) maximizes the Rayleigh quotient \(\mathcal{R}(u)=u^\top K u\), i.e. the **explained variance** in \(K\). Then
\[
\underbrace{\mathcal{S}_0(t,t_0)}_{\text{variance share}}
\;\equiv\;
\frac{\lambda_0(t,t_0)}{\operatorname{Tr} K(t,t_0)}
\;=\;
\frac{\alpha_0\,\|P_0 u_0\|^2}{\sum_n \alpha_n}
\;\le\;
\mathcal{F}_0\big(w_{\text{opt}}\big),
\]
so \(\mathcal{S}_0\) is a **conservative lower bound** for the true overlap fraction (equality holds in the ideal span). **Acceptance rule:** require a time-window where \(\mathcal{S}_0\ge0.60\) is **flat in \(t\)** and **stable in \(t_0\)**.

**Practical recipe**
1. Compute \(L=\operatorname{chol}(C(t_0))\), \(K=L^{-1} C(t) L^{-\top}\).
2. Diagonalize \(K=U\Lambda U^\top\); set \(\lambda_0=\Lambda_{11}\), \(\mathcal{S}_0=\lambda_0/\sum_i \Lambda_{ii}\).
3. Map \(u_0\) back to weights \(w_{\text{opt}}=L^{-\top}u_0\) and normalize by \(w_{\text{opt}}^\top C(t_0) w_{\text{opt}}=1\).
4. Scan \(t\) with fixed \(\Delta t=t-t_0\in\{1,2\}\); look for **plateau** \(\mathcal{S}_0\).

**Bounded excited-state leakage.** For \(\Delta=E_1-E_0>0\),
\[
1-\mathcal{S}_0(t,t_0)\;\le\;c\,e^{-\Delta (t-t_0)},\qquad c=\mathcal{O}(1),
\]
so choosing \((t,t_0)\) with \((t-t_0)\) moderately large forces \(\mathcal{S}_0\to1\).

---

### (B) **Single-exponential fraction** in the optimized channel
Project with \(w_{\text{opt}}=v_0(t^\star,t_0)\) (fixed \(t^\star\)), then fit
\[
C_{\text{opt}}(t)=w_{\text{opt}}^\top C(t) w_{\text{opt}}
\;\approx\;
A_0\,e^{-E_0 t}\Big(1+r(t)\Big),\qquad
|r(t)|\ \lesssim\ e^{-(E_1-E_0)t}.
\]
Define the **fraction at \(t=t_{\min}\)**:
\[
\mathcal{F}_0^{\text{fit}}\;\equiv\;
\frac{A_0\,e^{-E_0 t_{\min}}}{C_{\text{opt}}(t_{\min})}
\;=\;
\frac{1}{1+\sum_{n\ge1}\frac{A_n}{A_0}\,e^{-(E_n-E_0) t_{\min}}},
\]
which is **monotone increasing** in \(t_{\min}\) and asymptotes to 1. Use correlated fits (covariance from the ensemble or from an analytic model) and quote a **one-sided lower CI**; accept if \(\mathcal{F}_0^{\text{fit}}\ge0.60\) with a visible **plateau** across adjacent \(t_{\min}\).

---

## Basis optimization & conditioning (no hand-tuning)
- **Condition the basis** using SVD on \(C(t_0)\): drop modes with singular values below \(\varepsilon\cdot\sigma_{\max}\) (e.g., \(\varepsilon=10^{-10}\)) to avoid ill-posed whitening.
- **Diversity matters**: include multiple loop sizes/shapes and **smearing radii** so that the span covers both the ground state and the first excitations; too narrow a basis can fake large \(\mathcal{S}_0\) but fail stability tests.
- **No implicit priors**: all optimization is **Rayleigh–Ritz**/GEVP; we do **not** inject target masses or hand weights.

---

## Acceptance checklist (≥ 60% criterion)
1. **GEVP stability**: eigenpairs stable under \(t_0\to t_0\pm1\) and mild basis pruning.
2. **Plateau**: \(\mathcal{S}_0(t,t_0)\) shows a clear plateau with value \(\ge0.60\).
3. **Cross-estimator agreement**: \(\mathcal{F}_0^{\text{fit}}(t_{\min})\) in the same window \(\ge0.60\) within errors.
4. **Excited-state bound**: using an estimate of \(\Delta=E_1-E_0\), the bound \(1-\mathcal{S}_0\le c e^{-\Delta (t-t_0)}\) is **numerically small** in the chosen window.
5. **Reproducible certificate**: write a JSON+Markdown report with \((t_0,t)\), \(\mathcal{S}_0\), \(\mathcal{F}_0^{\text{fit}}\), condition numbers, and the final \(w_{\text{opt}}\) (normalized).

---

## Mathematical rundown (derivation sketch)
1. **Spectral representation.** With centered operators and reflection positivity,
   \[
   C(t)=\sum_{n\ge0} e^{-E_n t}\,Z_n Z_n^\top,\qquad Z_n=(Z^{(n)}_1,\dots,Z^{(n)}_N)^\top.
   \]
2. **Metric & whitening.** For SPD \(C(t_0)=L L^\top\), define
   \[
   K(t,t_0)=L^{-1} C(t) L^{-\top}=\sum_{n\ge0} e^{-E_n (t-t_0)}\,y_n y_n^\top,\quad
   y_n=L^\top Z_n.
   \]
   In the ideal span, \(\{y_n\}\) are orthogonal; otherwise they are linearly independent with controlled angles.
3. **Rayleigh–Ritz optimization.** The maximizer of \(u^\top K u\) at fixed \(\|u\|_2=1\) is \(u_0\), the top eigenvector, with value \(\lambda_0\). Mapping back gives
   \[
   w_{\text{opt}}=L^{-\top}u_0,\qquad
   w_{\text{opt}}^\top C(t_0) w_{\text{opt}}=1.
   \]
4. **Ground-state fraction lower bound.** Write \(K=\alpha_0 P_0 + R\) with \(\alpha_0=e^{-E_0 (t-t_0)}\), \(P_0=\frac{y_0 y_0^\top}{\|y_0\|^2}\), \(R\simeq\sum_{n\ge1} \alpha_n P_n\). Then
   \[
   \lambda_0=\max_{\|u\|=1} u^\top K u \ge u_0^\top (\alpha_0 P_0) u_0 = \alpha_0 \|P_0 u_0\|^2,
   \]
   and \(\operatorname{Tr}K=\sum_n \alpha_n\). Therefore
   \[
   \mathcal{S}_0=\frac{\lambda_0}{\operatorname{Tr}K}
   \le
   \frac{\alpha_0 \|P_0 u_0\|^2}{\alpha_0}
   =\|P_0 u_0\|^2
   \le
   \mathcal{F}_0\big(w_{\text{opt}}\big),
   \]
   showing \(\mathcal{S}_0\) is a **conservative lower bound** on the true overlap fraction.
5. **Excited-state suppression.** Since \(\alpha_1/\alpha_0=e^{-(E_1-E_0)(t-t_0)}\), classical eigenvalue perturbation gives
   \[
   1-\|P_0 u_0\|^2 \;\le\; c\cdot e^{-(E_1-E_0)(t-t_0)},
   \]
   with \(c\) depending on angles between \(y_0\) and the subspace spanned by \(\{y_{n>0}\}\); this yields the **rigorous** \(t\)-window strategy.
6. **Single-exp fraction.** Projected channel:
   \[
   C_{\text{opt}}(t)=\sum_{n\ge0} A_n e^{-E_n t},\quad
   A_n=|Z_{w_{\text{opt}}}^{(n)}|^2,\quad
   \mathcal{F}_0^{\text{fit}}(t_{\min})=\frac{A_0 e^{-E_0 t_{\min}}}{C_{\text{opt}}(t_{\min})}.
   \]
   Fitting \(E_0,A_0\) on \([t_{\min},t_{\max}]\) with correlated \(\chi^2\) gives a **data-driven** fraction that increases with \(t_{\min}\) and is bounded from below by its one-sided CI.

---

## Outputs (to cite in manuscript)
- **`report.md`**: plateau plots/tables for \(\mathcal{S}_0\) and \(\mathcal{F}_0^{\text{fit}}\), chosen \((t_0,t)\), final \(w_{\text{opt}}\), and the acceptance verdict **(pass if ≥ 0.60)**.
- **`certificate.json`**: machine-readable SPD checks, condition numbers, eigenvalues \(\{\lambda_i\}\), overlap metrics, fit windows/priors, and the accepted \(w_{\text{opt}}\).

---

## Minimal usage sketch (once code is added)
```bash
# 1) Prepare C_ij(t0..tmax) as SPD matrices in data/
# 2) Solve GEVP and produce report
python -m src.report --t0 2 --dt 1 --tmin 3 --tmax 8 --in data/corr.npz --out out/
# 3) Read out/report.md and certificate.json; import plots into manuscript appendix

The acceptance logic and math above are complete; adding code simply automates these steps. Once you drop in measured or analytically generated (C_{ij}(t)), this repository will produce a reproducible certificate that your optimized basis achieves ≥ 60% ground-state overlap in the (0^{++}) channel.
````markdown

## Explanation of Chosen Constants in JSON Configuration

The following constants are used in the JSON configuration for the `su3-glueball-0pp-overlap` repository. Each value is chosen based on physical, mathematical, or computational considerations:

- **`sigma_phys_GeV2` (0.235225)**: This represents the physical string tension in GeV², a fundamental parameter in lattice QCD that sets the scale for confinement.
- **`l_phys_fm` (0.10)**: The physical lattice spacing in femtometers (fm), chosen to ensure fine resolution while maintaining computational feasibility.
- **`c_area` (0.25)**: A dimensionless coefficient related to the area law for Wilson loops, calibrated to match theoretical predictions.
- **`b` (2)**: The blocking scale, chosen to balance locality and computational efficiency in the variational method.
- **`A` (3.0)**: A scaling factor for the amplitude in the spectral decomposition, ensuring numerical stability.
- **`C` (0.18)**: A constant in the correlator matrix normalization, tuned to maintain consistency across different lattice sizes.
- **`eta0` (0.05)**: A small parameter controlling the excited-state suppression, chosen to optimize the plateau stability.
- **`eta_star` (0.001)**: A finer parameter for secondary suppression, ensuring rigorous bounds on excited-state contamination.
- **`c_KP` (0.5)**: A coefficient in the KP condition, balancing accuracy and computational cost.
- **`kappa` (0.5)**: The smearing parameter, chosen to enhance signal-to-noise ratio while preserving physical features.

These values are carefully selected to ensure that the mathematical and physical models align with theoretical expectations and practical constraints. Adjustments may be necessary for different lattice setups or physical scenarios.
```


# ================================
# Constructive Glueball Bounds Setup
# ================================

# 1. Clone the repository
git clone https://github.com/<your-username>/constructive-glueball-bounds.git
cd constructive-glueball-bounds

# 2. Create and activate a Python virtual environment
python3 -m venv .venv
source .venv/bin/activate   # (Linux/macOS)
.venv\Scripts\activate    # (Windows PowerShell)

# 3. Upgrade pip and install in editable mode
python3 -m pip install --upgrade pip
pip install -e .

# 4. Verify CLI tools are available
constructive-cli --help
researcher-tools --help

# =======================================
# Quick start: synthetic overlap pipeline
# =======================================

# 5. Generate synthetic correlator data (T=32 time slices, 6 operators)
researcher-tools synth --T 32 --ops 6 --energies 0.35,0.90,1.50 --noise 0.001 --seed 42 --out outputs

# 6. Run GEVP stability check at t0=2
constructive-cli gevp --corr outputs/synth_corr.npz --t0 2 --dt 1

# 7. Detect plateau window t∈[3,12]
constructive-cli plateau --corr outputs/synth_corr.npz --t0 2 --tmin 3 --tmax 12 --threshold 0.60 --slope-tol 0.01

# 8. Cross-estimator fit in [4,12]
constructive-cli cross --corr outputs/synth_corr.npz --t0 2 --tstar 3 --fit-tmin 4 --fit-tmax 12

# 9. Excited-state bound at t=8
constructive-cli bound --corr outputs/synth_corr.npz --t0 2 --t 8

# 10. Run the full overlap certificate (JSON + Markdown written to outputs/)
constructive-cli cert \
  --corr outputs/synth_corr.npz \
  --t0 2 --dt 1 \
  --plateau 3 12 \
  --tstar 3 \
  --fit 4 12 \
  --boundt 8 \
  --out outputs

# Results:
#   outputs/certificate.json
#   outputs/report.md

# ======================================
# Glueball 0++ calibration from constants
# ======================================

# 11. Create an input constants JSON file (example)
cat > outputs/constants.json <<'EOF'
{
  "sigma_phys_GeV2": 0.235225,
  "l_phys_fm": 0.10,
  "c_area": 0.25,
  "b": 2,
  "A": 3.0,
  "C": 0.18,
  "eta0": 0.05,
  "eta_star": 0.001,
  "c_KP": 0.5,
  "kappa": 0.5
}
EOF

# 12. Run calibration (writes outputs/glue_calibration.json & .md)
constructive-cli gluecalib --constants outputs/constants.json --out outputs

# Results:
#   outputs/glue_calibration.json   # machine-readable
#   outputs/glue_calibration.md     # human-readable report

# =====================================
# Deactivate the environment when done
# =====================================
deactivate
